#include <bits/stdc++.h>
using namespace std;

using ll = long long;

#define precision(x) cout << fixed; cout.precision(x);
#define all(a) begin(a), end(a)
//#define pi numbers::pi

/* 보석함
 * cout << (s.find("fgg") == string::npos) << endl;
 * ceil, round, floor, sqrt, gcd, lcm
 * multiset<string> ss;
    cout << *s.rbegin() << endl;
 * vector<int> c(n);
    cout << max_element(c.begin(), c.end()) - c.begin()
 * bitset<1000> s;
 * stringstream ss(input);
 * for (const auto& [key, val] : m)
 * priority_queue<int, vector<int>, greater<int>> pq;
 * for (auto it = s.rbegin(); it != s.rend(); ++it) {
    cout << *it << '\n';}
 */

int main() {
   ios::sync_with_stdio(false);
   cin.tie(0);

   int N,M; cin >> N >> M;
   vector<vector<int>> v(N, vector<int>(M));
   for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
         cin >> v[i][j];
      }
   }
   int L,R; cin >> L >> R;
   vector<vector<int>> w(L, vector<int>(R));
   for (int i = 0; i < L; i++) {
      for (int j = 0; j < R; j++) {
         cin >> w[i][j];
      }
   }
   vector<vector<int>> x(N, vector<int>(R));
   for (int i = 0; i < N; i++) {
      for (int j = 0; j < R; j++) {
         int sum = 0;
         for (int k = 0; k < M; k++) {
            sum += v[i][k] * w[k][j];
         }
         x[i][j] = sum;
      }
   }
   for (int i = 0; i < N; i++) {
      for (int j = 0; j < R; j++) {
         cout << x[i][j] << " ";
      }
      cout << endl;
   }
}

